name: Test Single Download with EDT Timestamps

on:
  workflow_dispatch:  # Trigger manually from the Actions tab

jobs:
  test-download:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Needed for pushing new files

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Download once with EDT timestamps
        run: |
          set -e
          # Process each camera (skipping header); ensures last line is processed
          tail -n +2 morning_cameras.csv | \
          while IFS=, read -r sign_location_name direction roadway camera_number url id || [ -n "$id" ]; do
              echo "Processing camera: $id"
              mkdir -p "$id"  # Create folder using the 'id'
              
              # Generate a cache-busting timestamp (UNIX ms, UTC is fine)
              ts=$(date +%s%3N)
              
              # Generate a human-readable timestamp in EDT
              timestamp=$(TZ="America/New_York" date '+%Y%m%d_%I%M%P')
              
              # Build the output filename: folder/id_timestamp.jpg
              outfile="${id}/${id}_${timestamp}.jpg"
              
              # Download the image with cache busting appended as query parameter
              curl "${url}?${ts}" -o "$outfile"
          done

      - name: Commit and push new images
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          git add .
          if ! git diff-index --quiet HEAD; then
            # Commit using an EDT timestamp in the commit message too
            git commit -m "Test single download: $(TZ=\"America/New_York\" date '+%Y-%m-%d %H:%M:%S') [skip ci]"
            git push origin HEAD:${GITHUB_REF#refs/heads/}
          else
            echo "No changes to commit."
          fi